<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ddd on Cesarob&#39;s</title>
    <link>https://cesarob.github.io/tags/ddd/</link>
    <description>Recent content in ddd on Cesarob&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Tue, 11 Apr 2023 16:17:28 +0200</lastBuildDate>
    
	<atom:link href="https://cesarob.github.io/tags/ddd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Estructurar el código en una aplicación DDD</title>
      <link>https://cesarob.github.io/post/estructurar-codigo-ddd/</link>
      <pubDate>Tue, 11 Apr 2023 16:17:28 +0200</pubDate>
      
      <guid>https://cesarob.github.io/post/estructurar-codigo-ddd/</guid>
      <description>Una de las cosas a las que le daba mas vueltas con respecto a DDD, es como estructuraría el código en un proyecto greenfield.
La estructura de Codesai Según veo el libro de Vlad lo que comenta es que tengas una App Layer que sea el Api a tu dominio. Eso unido al tema de los comandos, me hace compararlo con la estructura de código que nos mostró Codesai:
auction_house/ ├── business │ ├── actions │ │ └── commands │ └── model │ ├── auction │ │ ├── events │ │ ├── exceptions │ │ └── services │ ├── bidder │ ├── generic │ └── owner └── infrastructure ├── api │ └── dtos ├── delivery_mechanism ├── events ├── processes └── repository Dentro de un subdominio (auction_house) está separada la capa de business de la de infrastructure.</description>
    </item>
    
    <item>
      <title>Recursos sobre DDD</title>
      <link>https://cesarob.github.io/post/recursos-ddd/</link>
      <pubDate>Sat, 08 Apr 2023 00:03:32 +0200</pubDate>
      
      <guid>https://cesarob.github.io/post/recursos-ddd/</guid>
      <description>Van a ir una serie de entradas sobre DDD, por lo que aprovecho para publicar unos recursos que tenía por ahí&amp;hellip; Si encuento cosas interesantes iré actualizado la entrada.
 Fran Iglesias ha escrito bastante en español sobre DDD. DDD reference Mi primer contacto con DDD fueron unas charlas en PluralSight. Hace mucho tiempo que las vi, por lo que ahora mismo no puedo opinar sobre ellas. No que quedó claro el cotarro, por lo que supongo serán un poco meh.</description>
    </item>
    
    <item>
      <title>Entendiendo DDD</title>
      <link>https://cesarob.github.io/post/entendiendo-ddd/</link>
      <pubDate>Fri, 07 Apr 2023 23:32:37 +0200</pubDate>
      
      <guid>https://cesarob.github.io/post/entendiendo-ddd/</guid>
      <description>Es curioso que justo cuando tenía este post en borrador (lleva ahí un tiempo) vi movimiento en twitter. He visto que recientemente se han publicado varios videos que tengo pendiente de ver. Al final el post que tenía pensado lo dividiré en un par de ellos y es muy posible que caiga alguno mas.
Llevo oyendo sobre Domain Driven Design (DDD) desde hace realmente un montón de años, pero nunca he tenido la ocasión de explícitamente aplicarlo.</description>
    </item>
    
  </channel>
</rss>